
html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}

*::before, *::after {
    content: "";
    display: table;
    clear: both;
}

html,body {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-size: 15px;
    line-height: 1.5;
    color: #000;
    background-color: #f1f1f1;
}

body {
    margin-top: 0;
    margin: 0;
    font-family: 'Arial', sans-serif;
}
/* styles.css */

.top-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #1248ab; /* Deep blue color */
    padding: 10px 20px;
    position: sticky;
    top: 0;
    z-index: 1000;

}

.logo a {
    font-size: 24px;
    color: #fff;
    text-decoration: none;
    font-weight: bold;
}

.nav-links {
    display: flex;
    gap: 20px;

}

.nav-links a {
    color: #fff;
    text-decoration: none;
    font-size: 16px;
    padding: 10px;
    transition: background-color 0.3s ease;
    border-radius: 4px;

}

.nav-links a:hover {
    background-color: #3B82F6; /* Lighter blue on hover */
}
.form-container {
    width: 70%;
    height: 800px;
    float: left;
    background-color: #fff;
    color: #000;
    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);
    padding: 16px;
    border-radius: 0.5em;
    margin: 8px 8px 16px 68px;
  }

progress {
    margin-top: 20px;
    width: 78%;
    background-color:rgb(149, 203, 236);
    height: 20px;
    border-radius: 0.5em;
}

progress::-moz-progress-bar,progress::-webkit-progress-value {
    background-color:#2b60a1;
    color: #5995e3;
}

.form-page {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    
    width: 80%;
}
.form-page .row {
    width: 100%;
    float: right;
    padding: 8px 8px 2px 0px;
    text-align: left;
    vertical-align: middle;
}


.form-page label input[type="radio"] {
    vertical-align: middle;
    margin-top: -1px;
}

.form-page button {
    background-color: #1E3A8A; /* Deep blue color to match the top nav */
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    margin: 10px;
    transition: background-color 0.3s ease, transform 0.2s ease;

}

.form-page button:hover {
    background-color: #3B82F6; /* Lighter blue on hover */
    transform: scale(1.05);

}
.form-page button.next {
    float: right;
}

.form-page button.previous {
    float: left;
}

input[type="text"], 
input[type="number"],
input[type="date"],
input[type="email"] {
    width: 100%; /* Ensure both fields take up the same width */
    max-width: 400px; /* Optional: Set a max width */
    padding: 10px; /* Consistent padding */
    border: 1px solid #ccc; /* Consistent border */
    border-radius: 4px; /* Consistent border radius */
    box-sizing: border-box; /* Ensure padding and border are included in the width */
    
}

.banner {
    width: 90%;
    height: 200px;
    position: relative;
    margin-inline: auto;
    overflow: hidden;
    margin-bottom: 20px;
}

.sidebar-ad {
    width: 20%;
    padding: 10px;
    height: 100%;
    float: right;
}

#ad-container {
    position: relative;
    width: 100%;
    height: 600px;
    overflow: hidden;
}
.ad-image {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1s ease-in-out;
}
#bookingConfirmed {
    width: 40%;
    height: 10%;
}

#ad-text-name {
    position: absolute;
    bottom: 10px;
    left: 10px;
    font-size: 8px;
    color: #ffffff;
    text-shadow: 2px 2px 4px #000000;
}

#ad-image-1.active, #ad-image-2.active, #ad-image-3.active,#ad-image-4.active {
    opacity: 1;
}

#replay-button {
    padding: 5px 10px;
    background-color: #5995e3;
    color: #fff;
    border: none;
}

#replay-button:hover {
    background-color: #0f2d46;
}

.sceneContainer {
    width: 100%;
    height: 100%;
    position: absolute;
}
.scene {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    transition: all 2s ease;
}


/* Moved scene animation to image animation */
#scene1 > img {
    position: absolute;
    width: 120%;
    top: -180px;
    left: -101px;
    opacity: 0;
    animation: translateScene 5s ease-in-out;
    animation-delay: 0s;
}

h1,#studentid {
    font-family: 'Poppins', sans-serif;
    text-shadow: #f1f1f1;
    color:#a5d8ee;
    text-shadow: 3px 3px 8px rgba(0, 0, 0, 0.7);  /* Text shadow */
    position: absolute;
    right: 60px;  /* Distance from the right edge */
    bottom: 20px; /* Distance from the bottom edge */    

}
#studentid {
    font-size: 10px;
    bottom: 2px;
}
/* Added animation to scene text  */
#scene1 > h1 {
    /* Set position absolute within scene container.
     * Set CSS styles to what they should be after animation
     * EG: If scene 1 should remain hidden, set opacity: 0 as default.
     */
    position: absolute;
    opacity: 0;
    font-size: 30px;
    color: white;
    animation: scene1Text 4s linear;
    animation-delay: 0s;
}
@keyframes translateScene {

    0% {
        opacity: 1;
        transform: translateX(-20%);
    }
    40% {
        opacity: 1;
        transform: translateX(0%);
    }
    50% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}


/* Added text animation track */
@keyframes scene1Text {
    0% {
        opacity: 1;
        font-size: 20px;
        color: rgb(242, 235, 235);
    }
    40% {
        opacity: 1;
        font-size: 40px;
        color: white;
    }
    50% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}

#scene2 {
    overflow: hidden;   
    position: relative;
}

/* Moved scene animation to image animation */
#scene2 > img {
    position: absolute;
    width: 109%;
    top: -95px;
    transform: scale(1.2);
    animation: zoomScene 4s ease-in-out;
    animation-delay: 0s;
}

@keyframes zoomScene { 

    0% {
        opacity: 0;
    }
    40% {
        opacity: 0;
    }
    50% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(1.2);

        opacity: 1;
    }
}
/* Added animation to scene text */
#scene2 > h1 {
    /* Set position absolute within scene container.
     * Set CSS styles to what they should be after animation
     * EG: If scene 1 should remain hidden, set opacity: 0 as default.
     */
    position: absolute;
    font-size: 20px;
    color: rgb(149, 225, 245);
    animation: scene2Text 4s linear;
    animation-delay: 0s;
}

/* Added text animation track */
@keyframes scene2Text {
    0% {
        opacity: 0;
    }
    40% {
        opacity: 0;
    }
    50% {
        opacity: 1;
        font-size: 30px;
        color: white;
    }
    100% {
        opacity: 1;
        font-size: 20px;
        color: rgb(186, 233, 244);
    }
}



